# encoding: UTF-8

RM := rm -rf

CC := gcc
CC_FLAGS := -O2 -Wall -std=c99
CC_FLAGS += $(GLOBAL_CC_FLAGS)

ASMCMP_BIN := bin/asmcmp

ASMCMP_SRC_DIR := src
ASMCMP_OBJ_DIR := obj

# ASSEMBLER COMPILER INCLUDES
ASMCMP_INCLUDES := $(PL1_UTILS_DIR)/src
ASMCMP_INCLUDES := $(addprefix -I, $(ASMCMP_INCLUDES))

# ASSEMBLER COMPILER DEFINITIONS
# ASMCMP_DEFINITIONS :=
# ASMCMP_DEFINITIONS +=

# ASSEMBLER COMPILER LIBS DIR
ASMCMP_LIB_DIRS := $(PL1_UTILS_DIR)
ASMCMP_LIB_DIRS := $(addprefix -L, $(ASMCMP_LIB_DIRS))

# ASSEMBLER COMPILER STATIC LIBRARIES
ASMCMP_STAT_LIBS := utils
ASMCMP_STAT_LIBS := $(addprefix -l, $(ASMCMP_STAT_LIBS))

# ASSEMBLER COMPILER SOURCES WITHOUT DIRECTORIES's PREFIXES
ASMCMP_SRCS_NOTDIR := $(notdir $(wildcard $(ASMCMP_SRC_DIR)/*.c))

# ASSEMBLER COMPILER OBJECTS
ASMCMP_OBJS := $(patsubst %.c, $(ASMCMP_OBJ_DIR)/%.o, $(ASMCMP_SRCS_NOTDIR))

# ASSEMBLER COMPILER DEPENDENCIES
ASMCMP_DEPS := $(patsubst %.c, $(ASMCMP_OBJ_DIR)/%.d, $(ASMCMP_SRCS_NOTDIR))

init:
	mkdir -p bin $(ASMCMP_OBJ_DIR)

build:	init $(ASMCMP_BIN)

clean:
	-$(RM) -fr bin $(ASMCMP_OBJ_DIR) $(ASMCMP_DEPS)

$(ASMCMP_OBJ_DIR)/%.o:	$(ASMCMP_SRC_DIR)/%.c
	$(CC) -c $< $(CC_FLAGS) $(ASMCMP_INCLUDES) -MMD -o $@

$(ASMCMP_BIN):	$(ASMCMP_OBJS)
	$(CC) $^ $(ASMCMP_LIB_DIRS) $(ASMCMP_STAT_LIBS) -o $@

-include $(ASMCMP_DEPS)

.PHONY:	build clean init