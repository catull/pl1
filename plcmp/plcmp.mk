# encoding: UTF-8

RM := rm -rf

CC := gcc
CC_FLAGS := -O2 -Wall -std=c99
CC_FLAGS += $(GLOBAL_CC_FLAGS)

PLCMP_BIN := bin/plcmp

PLCMP_SRC_DIR := src
PLCMP_OBJ_DIR := obj

# PL COMPILER INCLUDES
PLCMP_INCLUDES := $(PL1_UTILS_DIR)/src
PLCMP_INCLUDES := $(addprefix -I, $(PLCMP_INCLUDES))

# PL COMPILER DEFINITIONS
# PLCMP_DEFINITIONS :=
# PLCMP_DEFINITIONS +=

# PL COMPILER LIBS DIR
PLCMP_LIB_DIRS := $(PL1_UTILS_DIR)
PLCMP_LIB_DIRS := $(addprefix -L, $(PLCMP_LIB_DIRS))

# PL COMPILER STATIC LIBRARIES
PLCMP_STAT_LIBS := utils
PLCMP_STAT_LIBS := $(addprefix -l, $(PLCMP_STAT_LIBS))

# PL COMPILER SOURCES WITHOUT DIRECTORIES's PREFIXES
PLCMP_SRCS_NOTDIR := $(notdir $(wildcard $(PLCMP_SRC_DIR)/*.c))

# PL COMPILER OBJECTS
PLCMP_OBJS := $(patsubst %.c, $(PLCMP_OBJ_DIR)/%.o, $(PLCMP_SRCS_NOTDIR))

# PL COMPILER DEPENDENCIES
PLCMP_DEPS := $(patsubst %.c, $(PLCMP_OBJ_DIR)/%.d, $(PLCMP_SRCS_NOTDIR))

init:
	mkdir -p bin $(PLCMP_OBJ_DIR)

build:	init $(PLCMP_BIN)

clean:
	-$(RM) -fr bin $(PLCMP_OBJ_DIR) $(PLCMP_DEPS)

$(PLCMP_BIN):	$(PLCMP_OBJS)
	$(CC) $^ $(PLCMP_LIB_DIRS) $(PLCMP_STAT_LIBS) -o $@

$(PLCMP_OBJ_DIR)/%.o:	$(PLCMP_SRC_DIR)/%.c
	$(CC) -c $< $(CC_FLAGS) $(PLCMP_INCLUDES) -MMD -o $@

-include $(PLCMP_DEPS)

.PHONY:	build clean init